syntax = "proto3";
package dreanity.saturn.treasury;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "treasury/params.proto";
import "treasury/treasurer.proto";
import "treasury/gas_price.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/dreanity/saturn/x/treasury/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dreanity/saturn/treasury/params";
  }
  // Queries a Treasurer by index.
	rpc Treasurer(QueryGetTreasurerRequest) returns (QueryGetTreasurerResponse) {
		option (google.api.http).get = "/dreanity/saturn/treasury/treasurer";
	}
// Queries a GasPrice by index.
	rpc GasPrice(QueryGetGasPriceRequest) returns (QueryGetGasPriceResponse) {
		option (google.api.http).get = "/dreanity/saturn/treasury/gas_price/{currency}";
	}

	// Queries a list of GasPrice items.
	rpc GasPriceAll(QueryAllGasPriceRequest) returns (QueryAllGasPriceResponse) {
		option (google.api.http).get = "/dreanity/saturn/treasury/gas_price";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetTreasurerRequest {}

message QueryGetTreasurerResponse {
	Treasurer Treasurer = 1 [(gogoproto.nullable) = false];
}
message QueryGetGasPriceRequest {
	  string currency = 1;

}

message QueryGetGasPriceResponse {
	GasPrice gasPrice = 1 [(gogoproto.nullable) = false];
}

message QueryAllGasPriceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGasPriceResponse {
	repeated GasPrice gasPrice = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
