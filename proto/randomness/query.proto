syntax = "proto3";
package saturn.randomness;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "randomness/params.proto";
import "randomness/chain_info.proto";
import "randomness/unproven_randomness.proto";
import "randomness/proven_randomness.proto";
// this line is used by starport scaffolding # 1

option go_package = "saturn/x/randomness/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/saturn/randomness/params";
  }
  // Queries a ChainInfo by index.
	rpc ChainInfo(QueryGetChainInfoRequest) returns (QueryGetChainInfoResponse) {
		option (google.api.http).get = "/saturn/randomness/chain_info";
	}

// Queries a UnprovenRandomness by index.
	rpc UnprovenRandomness(QueryGetUnprovenRandomnessRequest) returns (QueryGetUnprovenRandomnessResponse) {
		option (google.api.http).get = "/saturn/randomness/unproven_randomness_2/{round}";
	}

	// Queries a list of UnprovenRandomness items.
	rpc UnprovenRandomnessAll(QueryAllUnprovenRandomnessRequest) returns (QueryAllUnprovenRandomnessResponse) {
		option (google.api.http).get = "/saturn/randomness/unproven_randomness_2";
	}

// Queries a ProvenRandomness by index.
	rpc ProvenRandomness(QueryGetProvenRandomnessRequest) returns (QueryGetProvenRandomnessResponse) {
		option (google.api.http).get = "/saturn/randomness/proven_randomness_2/{round}";
	}

	// Queries a list of ProvenRandomness items.
	rpc ProvenRandomnessAll(QueryAllProvenRandomnessRequest) returns (QueryAllProvenRandomnessResponse) {
		option (google.api.http).get = "/saturn/randomness/proven_randomness_2";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetChainInfoRequest {}

message QueryGetChainInfoResponse {
	ChainInfo ChainInfo = 1 [(gogoproto.nullable) = false];
}

message QueryGetUnprovenRandomnessRequest {
	  uint64 round = 1;

}

message QueryGetUnprovenRandomnessResponse {
	UnprovenRandomness unprovenRandomness = 1 [(gogoproto.nullable) = false];
}

message QueryAllUnprovenRandomnessRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUnprovenRandomnessResponse {
	repeated UnprovenRandomness unprovenRandomness = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProvenRandomnessRequest {
	  uint64 round = 1;

}

message QueryGetProvenRandomnessResponse {
	ProvenRandomness provenRandomness = 1 [(gogoproto.nullable) = false];
}

message QueryAllProvenRandomnessRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProvenRandomnessResponse {
	repeated ProvenRandomness provenRandomness = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
