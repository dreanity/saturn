syntax = "proto3";
package dreanity.saturn.profile;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "profile/params.proto";
import "profile/profile.proto";
import "profile/name_registry.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/dreanity/saturn/x/profile/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dreanity/saturn/profile/params";
  }
  // Queries a Profile by index.
	rpc Profile(QueryGetProfileRequest) returns (QueryGetProfileResponse) {
		option (google.api.http).get = "/dreanity/saturn/profile/profile/{address}";
	}

	// Queries a list of Profile items.
	rpc ProfileAll(QueryAllProfileRequest) returns (QueryAllProfileResponse) {
		option (google.api.http).get = "/dreanity/saturn/profile/profile";
	}

// Queries a NameRegistry by index.
	rpc NameRegistry(QueryGetNameRegistryRequest) returns (QueryGetNameRegistryResponse) {
		option (google.api.http).get = "/dreanity/saturn/profile/name_registry/{name}";
	}

	// Queries a list of NameRegistry items.
	rpc NameRegistryAll(QueryAllNameRegistryRequest) returns (QueryAllNameRegistryResponse) {
		option (google.api.http).get = "/dreanity/saturn/profile/name_registry";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetProfileRequest {
	  string address = 1;

}

message QueryGetProfileResponse {
	Profile profile = 1 [(gogoproto.nullable) = false];
}

message QueryAllProfileRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProfileResponse {
	repeated Profile profile = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetNameRegistryRequest {
	  string name = 1;

}

message QueryGetNameRegistryResponse {
	NameRegistry nameRegistry = 1 [(gogoproto.nullable) = false];
}

message QueryAllNameRegistryRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNameRegistryResponse {
	repeated NameRegistry nameRegistry = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
